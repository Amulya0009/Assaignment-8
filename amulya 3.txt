//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package com.crackerBarrel;

import java.util.Arrays;

public class Boards {
    private int score;
    public boolean[] pegs;

    public Boards() {
        this.pegs = new boolean[15];
        Arrays.fill(this.pegs, false);
        this.score = 15;
    }

    public Boards(int[] filled) {
        this();
        int[] var2 = filled;
        int var3 = filled.length;

        for(int var4 = 0; var4 < var3; ++var4) {
            int p = var2[var4];
            this.pegs[p] = true;
            --this.score;
        }

    }

    public Boards(int i) {
        this.pegs = new boolean[15];
        Arrays.fill(this.pegs, true);
        this.score = 0;
        this.remove(i);
    }

    public Boards(Boards board) {
        this.pegs = Arrays.copyOf(board.pegs, 15);
        this.score = board.score;
    }

    public boolean canApplyMove(Moves m) {
        return this.pegs[m.from] && this.pegs[m.over] && !this.pegs[m.to];
    }

    public void applyMove(Moves m) {
        if (this.canApplyMove(m)) {
            this.remove(m.over);
            this.movePiece(m.from, m.to);
        }

    }

    public int getScore() {
        return this.score;
    }

    private void remove(int i) {
        if (this.pegs[i]) {
            this.pegs[i] = false;
            ++this.score;
        }
    }

    private void movePiece(int src, int dest) {
        if (this.pegs[src] && !this.pegs[dest]) {
            this.pegs[src] = false;
            this.pegs[dest] = true;
        }

    }

    public String toString() {
        StringBuilder s = new StringBuilder(this.score + " : [");
        boolean[] var2 = this.pegs;
        int var3 = var2.length;

        for(int var4 = 0; var4 < var3; ++var4) {
            boolean b = var2[var4];
            s.append(b ? "1," : "0,");
        }

        s.append("]");
        return s.toString();
    }

    public String toTriangle() {
        String s = "";
        s = s + "    4    \n";
        s = s + "   3 5   \n";
        s = s + "  2 4 6  \n";
        s = s + " 1 3 5 7 \n";
        s = s + "0 2 4 6 8\n";
        char[] cs = s.toCharArray();
        cs[4] = (char)(this.pegs[0] ? 88 : 79);
        cs[13] = (char)(this.pegs[1] ? 88 : 79);
        cs[15] = (char)(this.pegs[2] ? 88 : 79);
        cs[22] = (char)(this.pegs[3] ? 88 : 79);
        cs[24] = (char)(this.pegs[4] ? 88 : 79);
        cs[26] = (char)(this.pegs[5] ? 88 : 79);
        cs[31] = (char)(this.pegs[6] ? 88 : 79);
        cs[33] = (char)(this.pegs[7] ? 88 : 79);
        cs[35] = (char)(this.pegs[8] ? 88 : 79);
        cs[37] = (char)(this.pegs[9] ? 88 : 79);
        cs[40] = (char)(this.pegs[10] ? 88 : 79);
        cs[42] = (char)(this.pegs[11] ? 88 : 79);
        cs[44] = (char)(this.pegs[12] ? 88 : 79);
        cs[46] = (char)(this.pegs[13] ? 88 : 79);
        cs[48] = (char)(this.pegs[14] ? 88 : 79);
        return new String(cs);
    }
}
